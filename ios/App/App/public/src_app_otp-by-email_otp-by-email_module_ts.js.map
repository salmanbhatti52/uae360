{"version":3,"file":"src_app_otp-by-email_otp-by-email_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEF;AAErD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8DAAc;KAC1B;CACF,CAAC;IAMW,2BAA2B,SAA3B,2BAA2B;;AAA3B,2BAA2B;IAJvC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,2BAA2B;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AChBC;AACM;AACF;AACQ;AACR;AAE+B;AAEvB;AACJ;IAYpC,oBAAoB,SAApB,oBAAoB;;AAApB,oBAAoB;IAXhC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,qFAA2B;YAC3B,0DAAgB;YAChB,+DAAmB;SACpB;QACD,YAAY,EAAE,CAAC,8DAAc,CAAC;KAC/B,CAAC;GACW,oBAAoB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACrBiB;AACP;AACF;AACY;IAOxC,cAAc,SAAd,cAAc;IAKzB,YAAmB,QAAiB,EAC3B,MAAa,EACb,GAAc;QAFJ,aAAQ,GAAR,QAAQ,CAAS;QAC3B,WAAM,GAAN,MAAM,CAAO;QACb,QAAG,GAAH,GAAG,CAAW;IAAG,CAAC;IAE3B,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAE9B,CAAC;IACD,WAAW,CAAC,GAAG;QACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,GAAG;IACrB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IACD,UAAU;QACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3B,IAAI,IAAI,GAAG;YACT,SAAS,EAAC,IAAI,CAAC,SAAS;YACxB,iBAAiB,EAAC,IAAI,CAAC,QAAQ;SAChC;QACD,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,yBAAyB,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAO,EAAC,EAAE;YACxE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAG,GAAG,CAAC,MAAM,IAAI,SAAS,EAAC;gBACzB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;aAC7C;iBAAK,IAAG,GAAG,CAAC,MAAM,IAAI,OAAO,EAAC;gBAC7B,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aACpC;iBAAI;aAEJ;QAEH,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAEnB,CAAC,CAAC;IAEJ,CAAC;;;;;;;AA5CU,cAAc;IAL1B,wDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yEAAuC;;KAExC,CAAC;GACW,cAAc;AAAA","sources":["./src/app/otp-by-email/otp-by-email-routing.module.ts","./src/app/otp-by-email/otp-by-email.module.ts","./src/app/otp-by-email/otp-by-email.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OtpByEmailPage } from './otp-by-email.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OtpByEmailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OtpByEmailPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { OtpByEmailPageRoutingModule } from './otp-by-email-routing.module';\n\nimport { OtpByEmailPage } from './otp-by-email.page';\nimport { NgOtpInputModule } from  'ng-otp-input';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OtpByEmailPageRoutingModule,\n    NgOtpInputModule,\n    ReactiveFormsModule\n  ],\n  declarations: [OtpByEmailPage]\n})\nexport class OtpByEmailPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-otp-by-email',\n  templateUrl: './otp-by-email.page.html',\n  styleUrls: ['./otp-by-email.page.scss'],\n})\nexport class OtpByEmailPage implements OnInit {\n\n  appUserId:any;\n  otpValue:any;\n\n  constructor(public location:Location,\n    public router:Router,\n    public api:ApiService) {}\n\n  ngOnInit(){\n    this.appUserId = localStorage.getItem('appUserId');\n    console.log(this.appUserId);\n    \n  }\n  onOtpChange(otp){\n    console.log(otp);\n    this.otpValue = otp\n  }\n  goBack(){\n    this.location.back();\n  }\n  gotoSignIn(){\n    console.log(this.otpValue);\n    \n    let data = {\n      appUserId:this.appUserId,\n      forgotPasswrodOtp:this.otpValue\n    }\n    this.api.sendRequest('verifyForgetPasswordOtp',data).subscribe((res:any)=>{\n      console.log(res);\n      if(res.status == 'success'){\n        this.api.presentToast('Success!');\n        this.router.navigate(['/set-new-password']);\n      }else if(res.status == 'error'){\n        this.api.presentToast(res.message);\n      }else{\n        \n      }\n\n    },(err)=>{\n      console.log(err);\n      \n    })\n   \n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}